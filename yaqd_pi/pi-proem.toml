protocol = "pi-proem"
doc = ""
traits = ["has-mapping", "has-measure-trigger", "is-sensor", "is-daemon"]

[links]
source = "https://github.com/yaq-project/yaqd-pi"
bugtracker = "https://github.com/yaq-project/yaqd-pi/issues"

[installation]
PyPI = "https://pypi.org/project/yaqd-pi"

[[types]]
type = "record"
name = "spectral_mapping"
fields = [
    {"name"="gpmm", "type"="float", "doc"="grating groove density (per mm)"},
    {"name"="grating_aoi_deg", "type"="float", "doc"="Angle of incident beam on grating face (deg).  If grating is transmissive, account for refraction."},
    {"name"="focal_length", "type"="float", "doc"="focal length of focusing lens (mm)"},
    # {"name"="grating_refractive_index", "type"="float", "default"=1.6, "doc"="grating index of refraction"},
    # {"name"="spectral_range_nm", "type"="array", items="float", "default"=[0.36, 0.841], "doc"="The desired range of wavelengths that is displayed on the spectral axis of the detector. Units of microns. First item in the list is the bluest color, second item is the reddest"},
    {"name"="position_offset", "type"="float"},
    {"name"="order", "type"="int", "default"=1, "doc"="Diffraction order"},
    {"name"="axis", "type"="int", "doc"="Image index along which the spectrum is dispersed (0 or 1)"},
]

[[types]]
type = "record"
name = "proem_roi"
fields = [
    {"name"="x_binning", "type"="int", "default"=1},
    {"name"="y_binning", "type"="int", "default"=1},
    {"name"="left", "type"="int", "default"=0},
    {"name"="width", "type"="int", "default"=512},
    {"name"="bottom", "type"="int", "default"=0},
    {"name"="height", "type"="int", "default"=512}
]

[config]

[config.make]
default = "princeton_instruments"

[config.model]
default = "proEM-HS:512BX3"

[config.sensor_temperature_setpoint]
type = "float"
doc = """Set the sensor temperature in deg C. \\
        Be careful if setting to anything but -70.0 C \\
        Do not set below -80.0 C"""
default = -70.0

[config.spectrometer]
type = ["null", "spectral_mapping"]
doc = "If you have a spectrometer enter the params here."
default = "__null__"

[state]

[messages]

set_roi.request = [{name="roi", type="proem_roi"}]
get_roi.response = "proem_roi"

set_exposure_time.request = [{name="exposure_time", type="float"}]
get_exposure_time.response = "float"
get_exposure_time_units.response = "string"

set_readout_count.request = [{name="readout_count", type="int"}]
get_readout_count.response = "int"

set_em_gain.request = [{name="em_gain", type="int"}]
get_em_gain.response = "int"
get_em_gain_limits.response = {items="int", type="array"}

set_analog_gain.request = [{name="gain", type="string"}]
get_analog_gain.response = "string"
get_analog_gain_types.response = [{items='string', type='array'}]

get_sensor_temperature.response = "float"

get_parameters.response = {items="string", type="array"}

set_adc_quality.request = [{name="quality", type="string"}]
get_adc_quality.response = "string"
get_adc_quality_types.response = {items='string', type='array'}

set_adc_speed.request = [{name="speed", type="float"}]
get_adc_speed.response = "float"
get_adc_speed_units.response = "string"

[properties]

[properties.temperature]
type = "float"
getter = "get_sensor_temperature"
dynamic = true
control_kind = "normal"
record_kind = "metadata"

[properties.exposure_time]
type = "float"
getter = "get_exposure_time"
setter = "set_exposure_time"
units_getter = "get_exposure_time_units"
control_kind = "hinted"
record_kind = "data"

[properties.readout_count]
type = "int"
getter = "get_readout_count"
setter = "set_readout_count"
control_kind = "hinted"
record_kind = "data"

[properties.analog_gain]
type = "string"
getter = "get_analog_gain"
setter = "set_analog_gain"
options_getter = "get_analog_gain_types"
control_kind = "normal"
record_kind = "metadata"

[properties.em_gain]
type = "int"
setter = "set_em_gain"
getter = "get_em_gain"
limits_getter = "get_em_gain_limits"
control_kind = "normal"
record_kind = "metadata"

[properties.adc_quality]
type = "string"
getter = "get_adc_quality"
setter = "set_adc_quality"
options_getter = "get_adc_quality_types"
control_kind = "normal"
record_kind = "metadata"

[properties.adc_speed]
type = "float"
setter = "set_adc_speed"
getter = "get_adc_speed"
units_getter = "get_adc_speed_units"
control_kind = "normal"
record_kind = "metadata"
