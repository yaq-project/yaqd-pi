protocol = "pi-proem"
doc = ""
traits = ["has-mapping", "has-measure-trigger", "is-sensor", "is-daemon"]

[links]
source = "https://gitlab.com/yaq/yaqd-pi"
bugtracker = "https://gitlab.com/yaq/yaqd-pi/-/issues"

[installation]
PyPI = "https://pypi.org/project/yaqd-pi"

[[types]]
type = "record"
name = "proem_roi"
fields = [
    {"name"="x_binning", "type"="int", "default"=1},
    {"name"="y_binning", "type"="int", "default"=1},
    {"name"="left", "type"="int", "default"=0},
    {"name"="width", "type"="int", "default"=512},
    {"name"="bottom", "type"="int", "default"=0},
    {"name"="height", "type"="int", "default"=512}
]

[[types]]
type = "enum"
name = "spectrometer_mode_enum"
symbols = ["spatial", "spectral"]

[[types]]
type = "enum"
name = "frame_processing_method_enum"
symbols = ["average", "sum"]

[config]

[config.make]
default = "princeton_instruments"

[config.model]
default = "proEM-HS:512BX3"

[config.sensor_temperature_setpoint]
type = "float"
doc = """Set the sensor temperature in deg C. \\
        Be careful if setting to anything but -70.0 C \\
        Do not set below -80.0 C"""
default = -70.0

[config.grating_aoi]
type = "float"
doc = """Angle of incident beam on grating face in deg. \\
         Default is 5."""
default = 5

[config.spectral_range]
type = "array"
items = "float"
doc = """The desired range of wavelengths that is displayed on the spectral \\
         axis of the detector. Units of microns. First item in the list is \\
        the bluest color, second item is the reddest e.g. [0.360, 0.841]"""
default = [0.36, 0.841]

[state]

roi.type = "proem_roi"
roi.default = {}
roi.doc = "The ROI."

em_gain.type = "int"
em_gain.default = 1
#em_gain.doc = """Electron multiplication factor.\\
#                 Note: If using over 100, read manual about careful operation.\\
#                 Default is 1."""

exposure_time.type = "float"
exposure_time.default = 33.0
exposure_time.doc = "Camera sensor exposure time (in milliseconds)."

readout_count.type = "int"
readout_count.default = 1
readout_count.doc =  "Number of frames to grab in the acquisition."

adc_analog_gain.type = "string"
adc_analog_gain.default = "Low"
# adc_analog_gain.doc = """Gain setting for output amplifier.\\
#                         The gain options are Low, Medium, and High."""

spectrometer_mode.type = "spectrometer_mode_enum"
spectrometer_mode.default = "spatial"
# spectrometer_mode.doc = """Toggles what mode the spectrometer is in.\\
#                            'spatial' is 2D spatial imaging.\\
#                           'spectral' is spectral along horizontal axis.\\
#                            Direct consequence is how the output image array is mapped.\\
#                            Default is 'spatial'."""

trigger_response.type = "string"
trigger_response.default = "NoResponse"
trigger_response.doc = "Toggle camera's trigger response."

frame_processing_method.type = "frame_processing_method_enum"
frame_processing_method.default = "average"
frame_processing_method.doc = "Choose to average or sum frames in multi-frame acquisition."

[messages]

set_roi.request = [{name="roi", type="proem_roi"}]
get_roi.response = "proem_roi"

set_em_gain.request = [{name="em_gain", type="int"}]
get_em_gain.response = "int"

set_exposure_time.request = [{name="exposure_time", type="float"}]
get_exposure_time.response = "float"

set_readout_count.request = [{name="readout_count", type="int"}]
get_readout_count.response = "int"

set_adc_analog_gain.request = [{name="gain", type="string"}]
get_adc_analog_gain.response = "string"

set_spectrometer_mode.request = [{name="spectrometer_mode", type="spectrometer_mode_enum"}]
get_spectrometer_mode.response = "spectrometer_mode_enum"

set_trigger_response.request = [{name="trigger_response", type="string"}]
get_trigger_response.response = "string"

set_frame_processing_method.request = [{name="frame_processing_method", type="frame_processing_method_enum"}]
get_frame_processing_method.response = "frame_processing_method_enum"

get_sensor_temperature.response = "float"